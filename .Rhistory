panel.grid.minor = element_blank(),
strip.text = element_text(size=12, face="bold"),
legend.position = "bottom")
head(sim_data)
sim_data <- data.frame(matrix(NA, nrow = length(ns)*k,
ncol = 10))
sim_data <- sim_data %>% rename(n=X1,
iter=X2,
Cov_p=X3,
Group_p=X4,
Method_p=X5,
Test_p=X6,
GxM_p=X7,
GxT_p=X8,
MxT_p=X9,
GxMxT_p=X10
)
row = 0
set.seed(1)
for (n in ns) {
print(n)
for (i in 1:k) {
row = row + 1
print(row)
test_anl_sample <- sample_n(test_anl_distribution, size=n)
test_exp_sample <- sample_n(test_exp_distribution, size=n)
teach_anl_sample <- sample_n(teach_anl_distribution, size=n)
teach_exp_sample <- sample_n(teach_exp_distribution, size=n)
dat <- rbind(test_anl_sample, test_exp_sample, teach_anl_sample, teach_exp_sample)
dat_long <- dat %>% rownames_to_column(var="subID") %>%
pivot_longer(cols = low_pressure:high_pressure,
names_to = "test", values_to = "score")
options(contrasts=c("contr.sum","contr.poly"))
mod0 <- lmer(score~pre_test+group*method*test+(1|subID), data=dat_long, REML=TRUE)
sim_data[row, "n"] <- n
sim_data[row, "iter"] <- i
sim_data[row, "Cov_p"] <- anova(mod0)[[6]][1] # covariate p-value
sim_data[row, "Group_p"] <- anova(mod0)[[6]][2] # group p-value
sim_data[row, "Method_p"] <- anova(mod0)[[6]][3] # method p-value
sim_data[row, "Test_p"] <- anova(mod0)[[6]][4] # test p-value
sim_data[row, "GxM_p"] <- anova(mod0)[[6]][5] # GxM  p-value
sim_data[row, "GxT_p"] <- anova(mod0)[[6]][6] # GxT p-value
sim_data[row, "MxT_p"] <- anova(mod0)[[6]][7] # MxT p-value
sim_data[row, "GxMxT_p"] <- anova(mod0)[[6]][8] # GxMxT p-value
# Summary Stats
# SUM_DATA<-dat_long %>% pivot_wider(names_from = "test", values_from = "score") %>%
#   mutate(diff = high_pressure-low_pressure) %>%
#   group_by(group) %>%
#   summarize(pre_ave=mean(pre_test),
#             pre_sd=sd(pre_test),
#             low_ave=mean(low_pressure),
#             low_sd=sd(low_pressure),
#             high_ave=mean(high_pressure),
#             high_sd=sd(high_pressure),
#             diff_ave = mean(diff),
#             diff_sd = sd(diff)) %>%
#   pivot_wider(values_from=pre_ave:diff_sd, names_from = group)
#
# sim_data[row, "teach_pre_ave"] <- SUM_DATA[, "pre_ave_teach"]
# sim_data[row, "teach_pre_sd"] <- SUM_DATA[, "pre_sd_teach"]
# sim_data[row, "teach_low_ave"] <- SUM_DATA[, "low_ave_teach"]
# sim_data[row, "teach_low_sd"] <- SUM_DATA[, "low_sd_teach"]
# sim_data[row, "teach_high_ave"] <- SUM_DATA[, "high_ave_teach"]
# sim_data[row, "teach_high_sd"] <- SUM_DATA[, "high_sd_teach"]
# sim_data[row, "teach_diff_ave"] <- SUM_DATA[, "diff_ave_teach"]
# sim_data[row, "teach_diff_sd"] <- SUM_DATA[, "diff_sd_teach"]
#
# sim_data[row, "test_pre_ave"] <- SUM_DATA[, "pre_ave_test"]
# sim_data[row, "test_pre_sd"] <- SUM_DATA[, "pre_sd_test"]
# sim_data[row, "test_low_ave"] <- SUM_DATA[, "low_ave_test"]
# sim_data[row, "test_low_sd"] <- SUM_DATA[, "low_sd_test"]
# sim_data[row, "test_high_ave"] <- SUM_DATA[, "high_ave_test"]
# sim_data[row, "test_high_sd"] <- SUM_DATA[, "high_sd_test"]
# sim_data[row, "test_diff_ave"] <- SUM_DATA[, "diff_ave_test"]
# sim_data[row, "test_diff_sd"] <- SUM_DATA[, "diff_sd_test"]
}
}
head(sim_data)
sim_summary <- sim_data %>% group_by(n) %>%
summarize(Cov_sig = sum(Cov_p<0.05)/n(),
Group_sig = sum(Group_p<0.05)/n(),
Method_sig = sum(Method_p<0.05)/n(),
Test_sig = sum(Test_p<0.05)/n(),
GxM_sig = sum(GxM_p<0.05)/n(),
GxT_sig = sum(GxT_p<0.05)/n(),
MxT_sig = sum(MxT_p<0.05)/n(),
GxMxT_sig = sum(GxMxT_p<0.05)/n()) %>%
pivot_longer(cols=Cov_sig:GxT_sig, names_to = "Effect", values_to = "Power") %>%
mutate(Effect = fct_relevel(Effect,
"Cov_sig", "Group_sig", "Method_sig",
"Test_sig", "GxM_sig", "GxT_sig",
"MxT_sig", "GxMxT_sig"))
head(sim_data)
sim_summary <- sim_data %>% group_by(n) %>%
summarize(Cov_sig = sum(Cov_p<0.05)/n(),
Group_sig = sum(Group_p<0.05)/n(),
Method_sig = sum(Method_p<0.05)/n(),
Test_sig = sum(Test_p<0.05)/n(),
GxM_sig = sum(GxM_p<0.05)/n(),
GxT_sig = sum(GxT_p<0.05)/n(),
MxT_sig = sum(MxT_p<0.05)/n(),
GxMxT_sig = sum(GxMxT_p<0.05)/n()) %>%
pivot_longer(cols=Cov_sig:GxMxT_sig, names_to = "Effect", values_to = "Power") %>%
mutate(Effect = fct_relevel(Effect,
"Cov_sig", "Group_sig", "Method_sig",
"Test_sig", "GxM_sig", "GxT_sig",
"MxT_sig", "GxMxT_sig"))
# Color blind friendly palette
cbPalette <- c("#000000", "#56B4E9", "#E69F00", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggplot(data=sim_summary, aes(x=n, y=Power)) +
geom_line(aes(lty=Effect, col=Effect)) +
geom_point(aes(shape=Effect, col=Effect)) +
scale_x_continuous(name = "n/Group") +
scale_y_continuous(name = "Statistical Power", limits=c(0,1)) +
theme_bw()+
scale_fill_manual(values=cbPalette)+
scale_colour_manual(values=cbPalette)+
theme(axis.text=element_text(size=12, color="black"),
legend.text=element_text(size=12, color="black"),
legend.title=element_text(size=12, face="bold"),
axis.title=element_text(size=12, face="bold"),
plot.title=element_text(size=12, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
strip.text = element_text(size=12, face="bold"),
legend.position = "bottom")
a <- c("AA", "BB", "CC", "DD")
b <- c("AA", "DD")
a %in% b
b %in% a
sum(b %in% a)
length(b %in% a)
sum(a %in% b)
length(a %in% b)
a <- c("AA", "BB", "CC", "DD")
b <- c("AA", "DD", "EE")
sum(b %in% a)
length(b %in% a)
library(tidyverse)
setwd("~/GitHub/PhysTher5110/")
list.files("./data/gait_example_data")
RAW_DAT <- read.csv("./data/gait_example_data/DDH25_0Run01.csv", header=FALSE,
sep=c(","), na.strings=c(" ", ""))
# Reshaping/labeling the FORCE data --------------------------------------------
RAW_DAT <- read.csv("./data/gait_example_data/DDH25_0Run01.csv", header=FALSE,
sep=c(","), na.strings=c(" ", ""))
FORCE_DAT <- RAW_DAT[6:9795,]
head(FORCE_DAT)
FORCE_LABS <- RAW_DAT[3:4,]
FORCE_LABS
FORCE_LABS <- data.frame(t(FORCE_LABS))
FORCE_LABS
colnames(FORCE_LABS) <- c("level1", "level2")
FORCE_LABS <- FORCE_LABS %>%
fill(level1, .direction="down")
FORCE_LABS
FORCE_LABS$level3 <- paste(FORCE_LABS$level1,
FORCE_LABS$level2,
sep="_")
colnames(FORCE_DAT) <- FORCE_LABS$level3
FORCE_DAT
write.csv(FORCE_DAT, "./data/gait_example_data/force_data.csv")
# Reshaping/labeling the MOTION data -------------------------------------------
RAW_DAT <- read.csv("./data/gait_example_data/DDH25_0Run01.csv", header=FALSE,
sep=c(","), na.strings=c(" ", ""),
skip=9798)
head(RAW_DAT)
MOTION_DAT <- RAW_DAT[4:nrow(RAW_DAT),]
head(MOTION_DAT)
MOTION_LABS <- RAW_DAT[1:2,]
MOTION_LABS
MOTION_LABS <- data.frame(t(MOTION_LABS))
MOTION_LABS
colnames(MOTION_LABS) <- c("level1", "level2")
MOTION_LABS <- MOTION_LABS %>%
fill(level1, .direction="down")
MOTION_LABS
MOTION_LABS$level3 <- paste(MOTION_LABS$level1,
MOTION_LABS$level2,
sep="_")
colnames(MOTION_DAT) <- MOTION_LABS$level3
MOTION_DAT
write.csv(MOTION_DAT, "./data/gait_example_data/motion_data.csv")
# Selecting and renaming only the variables we want ----------------------------
head(FORCE_DAT)
FORCE_DAT <- FORCE_DAT %>% select(`Treadmill Left - Force_Fx`,
`Treadmill Left - Force_Fy`,
`Treadmill Left - CoP_Cx`,
`Treadmill Left - CoP_Cy`) %>%
rename(force_x = `Treadmill Left - Force_Fx`,
force_y = `Treadmill Left - Force_Fy`,
cop_x = `Treadmill Left - CoP_Cx`,
cop_y = `Treadmill Left - CoP_Cy`) %>%
rownames_to_column(var="sample")
plot(FORCE_DAT$force_y)
plot(FORCE_DAT$force_y, type="l")
plot(FORCE_DAT$force_x, type="l")
plot(FORCE_DAT$cop_y, type="l")
plot(FORCE_DAT$cop_x, type="l")
head(MOTION_DAT)
MOTION_DAT <- MOTION_DAT %>% select(`DDH25:RICAL_X`, `DDH25:RICAL_Y`,
`DDH25:LICAL_X`, `DDH25:LICAL_Y`) %>%
rename(right_heel_x = `DDH25:RICAL_X`,
right_heel_y = `DDH25:RICAL_Y`,
left_heel_x = `DDH25:LICAL_X`,
left_heel_y = `DDH25:LICAL_Y`) %>%
rownames_to_column(var="sample")
plot(MOTION_DAT$right_heel_x, type="l")
plot(MOTION_DAT$right_heel_y, type="l")
plot(MOTION_DAT$left_heel_x, type="l")
plot(MOTION_DAT$left_heel_y, type="l")
FORCE_DAT[c(seq(from=1, to=nrow(FORCE_DAT), by=10)),]
FORCE_DAT_DS <- FORCE_DAT[c(seq(from=1, to=nrow(FORCE_DAT), by=10)),]
View(FORCE_DAT)
# Reshaping/labeling the FORCE data --------------------------------------------
RAW_DAT <- read.csv("./data/gait_example_data/DDH25_0Run01.csv", header=FALSE,
sep=c(","), na.strings=c(" ", ""))
FORCE_DAT <- RAW_DAT[6:9795,]
head(FORCE_DAT)
FORCE_LABS <- RAW_DAT[3:4,]
FORCE_LABS
FORCE_LABS <- data.frame(t(FORCE_LABS))
FORCE_LABS
colnames(FORCE_LABS) <- c("level1", "level2")
FORCE_LABS <- FORCE_LABS %>%
fill(level1, .direction="down")
FORCE_LABS
FORCE_LABS$level3 <- paste(FORCE_LABS$level1,
FORCE_LABS$level2,
sep="_")
colnames(FORCE_DAT) <- FORCE_LABS$level3
FORCE_DAT
write.csv(FORCE_DAT, "./data/gait_example_data/force_data.csv")
# Selecting and renaming only the variables we want ----------------------------
head(FORCE_DAT)
FORCE_DAT <- FORCE_DAT %>% select(`Treadmill Left - Force_Fx`,
`Treadmill Left - Force_Fy`,
`Treadmill Left - CoP_Cx`,
`Treadmill Left - CoP_Cy`) %>%
rename(force_x = `Treadmill Left - Force_Fx`,
force_y = `Treadmill Left - Force_Fy`,
cop_x = `Treadmill Left - CoP_Cx`,
cop_y = `Treadmill Left - CoP_Cy`) %>%
rownames_to_column(var="sample") %>%
mutate(sample = sample-5) # To start the samples at 1
FORCE_DAT <- FORCE_DAT %>% select(`Treadmill Left - Force_Fx`,
`Treadmill Left - Force_Fy`,
`Treadmill Left - CoP_Cx`,
`Treadmill Left - CoP_Cy`) %>%
rename(force_x = `Treadmill Left - Force_Fx`,
force_y = `Treadmill Left - Force_Fy`,
cop_x = `Treadmill Left - CoP_Cx`,
cop_y = `Treadmill Left - CoP_Cy`) %>%
rownames_to_column(var="sample") %>%
mutate(sample = as.numeric(sample)-5) # To start the samples at 1
plot(FORCE_DAT$force_y, type="l")
plot(FORCE_DAT$force_x, type="l")
plot(FORCE_DAT$cop_y, type="l")
plot(FORCE_DAT$cop_x, type="l")
View(FORCE_DAT)
FORCE_DAT_DS <- FORCE_DAT[c(seq(from=1, to=nrow(FORCE_DAT), by=10)),]
# The two datasets are now aligned in time and can be merged
# Rather than merge by a specific variable value (note that the two
# sample values do not align), we will simply bind the two sets
# of columns together as they are the same length
nrow(FORCE_DAT_DS)
nrow(MOTION_DAT)
MERGED <- cbind(FORCE_DAT_DS, MOTION_DAT)
head(MERGED)
MERGED <- cbind(MOTION_DAT,
FORCE_DAT_DS[-c("sample")])
MERGED <- cbind(MOTION_DAT,
FORCE_DAT_DS %>% select(-sample))
head(MERGED)
View(MOTION_DAT)
library(tidyverse)
setwd("~/GitHub/PhysTher5110/")
list.files("./data/gait_example_data")
RAW_DAT <- read.csv("./data/gait_example_data/DDH25_0Run01.csv", header=FALSE,
sep=c(","), na.strings=c(" ", ""))
# Reshaping/labeling the FORCE data --------------------------------------------
RAW_DAT <- read.csv("./data/gait_example_data/DDH25_0Run01.csv", header=FALSE,
sep=c(","), na.strings=c(" ", ""))
FORCE_DAT <- RAW_DAT[6:9795,]
head(FORCE_DAT)
FORCE_LABS <- RAW_DAT[3:4,]
FORCE_LABS
FORCE_LABS <- data.frame(t(FORCE_LABS))
FORCE_LABS
colnames(FORCE_LABS) <- c("level1", "level2")
FORCE_LABS <- FORCE_LABS %>%
fill(level1, .direction="down")
FORCE_LABS
FORCE_LABS$level3 <- paste(FORCE_LABS$level1,
FORCE_LABS$level2,
sep="_")
colnames(FORCE_DAT) <- FORCE_LABS$level3
FORCE_DAT
write.csv(FORCE_DAT, "./data/gait_example_data/force_data.csv")
# Reshaping/labeling the MOTION data -------------------------------------------
RAW_DAT <- read.csv("./data/gait_example_data/DDH25_0Run01.csv", header=FALSE,
sep=c(","), na.strings=c(" ", ""),
skip=9798)
head(RAW_DAT)
MOTION_DAT <- RAW_DAT[4:nrow(RAW_DAT),]
head(MOTION_DAT)
MOTION_LABS <- RAW_DAT[1:2,]
MOTION_LABS
MOTION_LABS <- data.frame(t(MOTION_LABS))
MOTION_LABS
colnames(MOTION_LABS) <- c("level1", "level2")
MOTION_LABS <- MOTION_LABS %>%
fill(level1, .direction="down")
MOTION_LABS
MOTION_LABS$level3 <- paste(MOTION_LABS$level1,
MOTION_LABS$level2,
sep="_")
colnames(MOTION_DAT) <- MOTION_LABS$level3
MOTION_DAT
write.csv(MOTION_DAT, "./data/gait_example_data/motion_data.csv")
# Selecting and renaming only the variables we want ----------------------------
head(FORCE_DAT)
FORCE_DAT <- FORCE_DAT %>% select(`Treadmill Left - Force_Fx`,
`Treadmill Left - Force_Fy`,
`Treadmill Left - CoP_Cx`,
`Treadmill Left - CoP_Cy`) %>%
rename(force_x = `Treadmill Left - Force_Fx`,
force_y = `Treadmill Left - Force_Fy`,
cop_x = `Treadmill Left - CoP_Cx`,
cop_y = `Treadmill Left - CoP_Cy`) %>%
rownames_to_column(var="sample") %>%
mutate(sample = as.numeric(sample)-5) # To start the samples at 1
plot(FORCE_DAT$force_y, type="l")
plot(FORCE_DAT$force_x, type="l")
plot(FORCE_DAT$cop_y, type="l")
plot(FORCE_DAT$cop_x, type="l")
head(MOTION_DAT)
MOTION_DAT <- MOTION_DAT %>% select(`DDH25:RICAL_X`, `DDH25:RICAL_Y`,
`DDH25:LICAL_X`, `DDH25:LICAL_Y`) %>%
rename(right_heel_x = `DDH25:RICAL_X`,
right_heel_y = `DDH25:RICAL_Y`,
left_heel_x = `DDH25:LICAL_X`,
left_heel_y = `DDH25:LICAL_Y`) %>%
rownames_to_column(var="sample") %>%
mutate(sample = as.numeric(sample)-3) # To start the samples at 1
plot(MOTION_DAT$right_heel_x, type="l")
plot(MOTION_DAT$right_heel_y, type="l")
plot(MOTION_DAT$left_heel_x, type="l")
plot(MOTION_DAT$left_heel_y, type="l")
# Down sampling the data to align FORCE and MOTION -----------------------------
# Note that the force data is sampled at a much higher rate
# (2000 Hz) than the motion capture data (200 Hz).
# This leades to a much longer time series for the force data
# compared to the motion data.
# Therefore, in order to combine these two time series, we will
# need to DOWN SAMPLE the force data. One simple way we can do
# this is by taking every tenth force observation:
FORCE_DAT_DS <- FORCE_DAT[c(seq(from=1, to=nrow(FORCE_DAT), by=10)),]
# The two datasets are now aligned in time and can be merged
# Rather than merge by a specific variable value (note that the two
# sample values do not align), we will simply bind the two sets
# of columns together as they are the same length
nrow(FORCE_DAT_DS)
nrow(MOTION_DAT)
MERGED <- cbind(MOTION_DAT,
FORCE_DAT_DS %>% select(-sample))
head(MERGED)
plot(MERGED$left_heel_y, MERGED$right_heel_y)
plot(x=MERGED$sample, y=MERGED$right_heel_y)
plot(x=MERGED$sample, y=MERGED$right_heel_y)
plot(x=MERGED$sample, y=MERGED$right_heel_y)
plot(x=MERGED$left_heel_y, y=MERGED$right_heel_y)
plot(x=MERGED$force_y, y=MERGED$right_heel_y)
ggplot(data=MERGED, aes(x=sample)) +
geom_line(aes(y=right_heel_y), col="firebrick")+
geom_line(aes(y=left_heel_y), col="dodgerblue")
summary(MERGED$sample)
ggplot(data=MERGED, aes(x=sample)) +
geom_line(aes(x=sample, y=right_heel_y), col="firebrick")+
geom_line(aes(x=sample, y=left_heel_y), col="dodgerblue")
ggplot(data=MERGED, aes(x=sample)) +
geom_line(aes(x=sample, y=right_heel_y, group=1),
col="firebrick")+
geom_line(aes(x=sample, y=left_heel_y, group=1),
col="dodgerblue")
ggplot(data=MERGED, aes(x=sample, y=right_heel_y)) +
geom_line(col="firebrick")
ggplot(data=MERGED, aes(x=sample, y=right_heel_y)) +
geom_line(aes(group=1), col="firebrick")
plot(x=MERGED$sample, y=MERGED$right_heel_y)
ggplot(data=MERGED, aes(x=sample, y=right_heel_y)) +
geom_point(shape=21, col="firebrick")
str(MERGED)
MERGED <- cbind(MOTION_DAT,
FORCE_DAT_DS %>% select(-sample)) %>%
head(MERGED)
MERGED <- cbind(MOTION_DAT,
FORCE_DAT_DS %>% select(-sample)) %>%
#
head(MERGED)
MERGED <- cbind(MOTION_DAT,
FORCE_DAT_DS %>% select(-sample))
head(MERGED)
MERGED <- cbind(MOTION_DAT,
FORCE_DAT_DS %>% select(-sample)) %>%
mutate_at(c(right_heel_x:cop_y), as.numeric)
MERGED <- cbind(MOTION_DAT,
FORCE_DAT_DS %>% select(-sample)) %>%
mutate_at(right_heel_x:cop_y, as.numeric)
MERGED <- cbind(MOTION_DAT,
FORCE_DAT_DS %>% select(-sample)) %>%
mutate_at(c("right_heel_x":"cop_y"), as.numeric)
head(MERGED)
plot(x=MERGED$sample, y=MERGED$right_heel_y)
plot(x=MERGED$sample, y=MERGED$right_heel_y)
plot(x=MERGED$left_heel_y, y=MERGED$right_heel_y)
summary(MERGED$sample)
str(MERGED)
ggplot(data=MERGED, aes(x=sample, y=right_heel_y)) +
geom_point(shape=21, col="firebrick")
MERGED <- cbind(MOTION_DAT,
FORCE_DAT_DS %>% select(-sample)) %>%
mutate_at(c("right_heel_x", "right_heel_y", "left_heel_x",
"left_heel_y", "force_x", "force_y", "cop_x", "cop_y"),
as.numeric)
head(MERGED)
plot(x=MERGED$sample, y=MERGED$right_heel_y)
plot(x=MERGED$sample, y=MERGED$right_heel_y)
plot(x=MERGED$left_heel_y, y=MERGED$right_heel_y)
summary(MERGED$sample)
str(MERGED)
ggplot(data=MERGED, aes(x=sample, y=right_heel_y)) +
geom_point(shape=21, col="firebrick")
ggplot(data=MERGED, aes(x=sample)) +
geom_line(aes(y=right_heel_y), shape=21, col="firebrick")
ggplot(data=MERGED, aes(x=sample)) +
geom_point(aes(y=right_heel_y), shape=21, col="firebrick")+
geom_point(aes(y=left_heel_y), shape=21, col="dodgerblue")
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7",
"#999933", "#882255", "#661100", "#6699CC")
ggplot(data=MERGED, aes(x=sample)) +
geom_point(aes(y=right_heel_y), shape=21, col="firebrick")+
geom_point(aes(y=left_heel_y), shape=21, col="dodgerblue")+
scale_y_continuous(name = "Heel Position") +
scale_x_continuous(name = "Time (samples)")+
theme_bw()
ggplot(data=MERGED, aes(x=sample)) +
geom_point(aes(y=right_heel_y), shape=21, col="firebrick")+
geom_point(aes(y=left_heel_y), shape=21, col="dodgerblue")+
scale_y_continuous(name = "Heel Position") +
scale_x_continuous(name = "Time (samples)")+
theme_bw()+
scale_fill_manual(values=cbPalette)+
scale_colour_manual(values=cbPalette)+
theme(axis.text=element_text(size=10, color="black"),
axis.title=element_text(size=10, face="bold"),
plot.title=element_text(size=10, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
strip.text = element_text(size=10, face="bold"),
legend.title = element_text(size=10, face="bold"),
legend.text = element_text(size=10),
legend.position = "bottom")
plot(x=MERGED$force_y, y=MERGED$right_heel_y)
plot(y=MERGED$force_y, x=MERGED$right_heel_y)
# Relationship between left and right heel
plot(x=MERGED$left_heel_y, y=MERGED$right_heel_y)
# Why does force look like a figure-8 compared to right heel?
plot(y=MERGED$force_y, x=MERGED$right_heel_y)
# Right heel Y over time
plot(x=MERGED$sample, y=MERGED$right_heel_y)
# Left heel Y over time
plot(x=MERGED$sample, y=MERGED$left_heel_y)
# Relationship between left and right heel
plot(x=MERGED$left_heel_y, y=MERGED$right_heel_y)
# Why does force look like a figure-8 compared to right heel?
plot(y=MERGED$force_y, x=MERGED$right_heel_y)
# Visualizing left and right heel position at the same time --------------------
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73",
"#F0E442", "#0072B2", "#D55E00", "#CC79A7",
"#999933", "#882255", "#661100", "#6699CC")
ggplot(data=MERGED, aes(x=sample)) +
geom_point(aes(y=right_heel_y), shape=21, col="firebrick")+
geom_point(aes(y=left_heel_y), shape=21, col="dodgerblue")+
scale_y_continuous(name = "Heel Position") +
scale_x_continuous(name = "Time (samples)")+
theme_bw()+
scale_fill_manual(values=cbPalette)+
scale_colour_manual(values=cbPalette)+
theme(axis.text=element_text(size=10, color="black"),
axis.title=element_text(size=10, face="bold"),
plot.title=element_text(size=10, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
strip.text = element_text(size=10, face="bold"),
legend.title = element_text(size=10, face="bold"),
legend.text = element_text(size=10),
legend.position = "bottom")
ggplot(data=MERGED, aes(x=sample)) +
geom_point(aes(y=right_heel_y), shape=21, col=cbPalette[2])+
geom_point(aes(y=left_heel_y), shape=21, col=cbPalette[3])+
scale_y_continuous(name = "Heel Position") +
scale_x_continuous(name = "Time (samples)")+
theme_bw()+
scale_fill_manual(values=cbPalette)+
scale_colour_manual(values=cbPalette)+
theme(axis.text=element_text(size=10, color="black"),
axis.title=element_text(size=10, face="bold"),
plot.title=element_text(size=10, face="bold", hjust=0.5),
panel.grid.minor = element_blank(),
strip.text = element_text(size=10, face="bold"),
legend.title = element_text(size=10, face="bold"),
legend.text = element_text(size=10),
legend.position = "bottom")
